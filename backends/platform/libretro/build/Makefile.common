LIBRETRO_DIR      = $(CORE_DIR)/backends/platform/libretro
DEPS_DIR          = $(LIBRETRO_DIR)/deps
LIBRETRO_COMM_DIR = $(LIBRETRO_DIR)/libretro-common

# Define enabled modules
ENABLED=STATIC_PLUGIN
ENABLE_AGI = $(ENABLED)
ENABLE_AGOS = $(ENABLED)
ENABLE_AGOS2 = $(ENABLED)
ENABLE_BBVS = $(ENABLED)
ENABLE_CINE = $(ENABLED)
ENABLE_CRUISE = $(ENABLED)
ENABLE_DREAMWEB = $(ENABLED)
ENABLE_EOB = $(ENABLED)
ENABLE_GOB = $(ENABLED)
ENABLE_GROOVIE = $(ENABLED)
ENABLE_GROOVIE2 = $(ENABLED)
ENABLE_IHNM = $(ENABLED)
ENABLE_KYRA = $(ENABLED)
ENABLE_LASTEXPRESS = $(ENABLED)
ENABLE_LOL = $(ENABLED)
ENABLE_LURE = $(ENABLED)
ENABLE_MADE = $(ENABLED)
ENABLE_MADS = $(ENABLED)
ENABLE_MOHAWK = $(ENABLED)
ENABLE_MYST = $(ENABLED)
ENABLE_NEVERHOOD = $(ENABLED)
ENABLE_QUEEN = $(ENABLED)
ENABLE_RIVEN = $(ENABLED)
ENABLE_SAGA = $(ENABLED)
ENABLE_SAGA2 = $(ENABLED)
ENABLE_SCI = $(ENABLED)
ENABLE_SCI32 = $(ENABLED)
ENABLE_SCUMM = $(ENABLED)
ENABLE_SCUMM_7_8 = $(ENABLED)
ENABLE_SHERLOCK = $(ENABLED)
ENABLE_SKY = $(ENABLED)
ENABLE_SWORD1 = $(ENABLED)
ENABLE_SWORD2 = $(ENABLED)
#ENABLE_SWORD25 = $(ENABLED)
ENABLE_TINSEL = $(ENABLED)
ENABLE_TOON = $(ENABLED)
ENABLE_TOUCHE = $(ENABLED)
ENABLE_TSAGE = $(ENABLED)
ENABLE_VOYEUR = $(ENABLED)
#ENABLE_ZVISION = $(ENABLED)

INCFLAGS    := -I$(LIBRETRO_DIR) -I$(CORE_DIR) -I$(DEPS_DIR) -I$(CORE_DIR)/engines -I$(LIBRETRO_COMM_DIR)/include -I$(LIBRETRO_COMM_DIR)/include/compat

INCLUDES    += $(INCFLAGS)
MODULE_DIRS += $(LIBRETRO_DIR)

OBJS := $(LIBRETRO_DIR)/libretro.o \
        $(LIBRETRO_DIR)/os.o \
		  $(LIBRETRO_COMM_DIR)/libco/libco.o

ifeq ($(USE_FLAC), 1)
DEFINES += -DUSE_FLAC
endif

ifeq ($(USE_TREMOR), 1)
DEFINES += -DUSE_TREMOR -DUSE_VORBIS
OBJS +=  $(DEPS_DIR)/tremor/bitwise.o \
			$(DEPS_DIR)/tremor/block.o \
			$(DEPS_DIR)/tremor/codebook.o \
			$(DEPS_DIR)/tremor/floor0.o \
			$(DEPS_DIR)/tremor/floor1.o \
			$(DEPS_DIR)/tremor/framing.o \
			$(DEPS_DIR)/tremor/info.o \
			$(DEPS_DIR)/tremor/mapping0.o \
			$(DEPS_DIR)/tremor/mdct.o \
			$(DEPS_DIR)/tremor/registry.o \
			$(DEPS_DIR)/tremor/res012.o \
			$(DEPS_DIR)/tremor/sharedbook.o \
			$(DEPS_DIR)/tremor/synthesis.o \
			$(DEPS_DIR)/tremor/vorbisfile.o \
			$(DEPS_DIR)/tremor/window.o
endif

ifeq ($(USE_ZLIB), 1)
DEFINES += -DUSE_ZLIB  -DWANT_ZLIB
OBJS +=   $(DEPS_DIR)/libz/deflate.o \
			 $(DEPS_DIR)/libz/gzlib.o \
			 $(DEPS_DIR)/libz/uncompr.o \
			 $(DEPS_DIR)/libz/zutil.o \
			 $(DEPS_DIR)/libz/inffast.o \
			 $(DEPS_DIR)/libz/gzread.o \
			 $(DEPS_DIR)/libz/crc32.o \
			 $(DEPS_DIR)/libz/gzwrite.o \
			 $(DEPS_DIR)/libz/inflate.o \
			 $(DEPS_DIR)/libz/infback.o \
			 $(DEPS_DIR)/libz/inftrees.o \
			 $(DEPS_DIR)/libz/trees.o \
			 $(DEPS_DIR)/libz/gzclose.o \
			 $(DEPS_DIR)/libz/compress.o \
			 $(DEPS_DIR)/libz/adler32.o
endif

ifneq ($(STATIC_LINKING), 1)
OBJS +=  $(LIBRETRO_COMM_DIR)/file/retro_dirent.o \
			$(LIBRETRO_COMM_DIR)/file/retro_stat.o \
		  	$(LIBRETRO_COMM_DIR)/file/file_path.o \
			$(LIBRETRO_COMM_DIR)/compat/compat_strl.o
endif

all: $(TARGET)

######################################################################
# Module settings
######################################################################

MODULES := test devtools base $(MODULES)

-include $(CORE_DIR)/engines/engines.mk

# After the game specific modules follow the shared modules
MODULES += \
	gui \
	backends \
	engines \
	video \
	image \
	graphics \
	audio \
	common \
	po

ifeq ($(USE_MT32EMU),1)
MODULES += $(CORE_DIR)/audio/softsynth/mt32
endif

######################################################################
# The build rules follow - normally you should have no need to
# touch whatever comes after here.
######################################################################

# Concat DEFINES and INCLUDES to form the CPPFLAGS
CPPFLAGS := $(DEFINES) $(INCLUDES) $(INCFLAGS)

# Include the build instructions for all modules
-include $(addprefix $(CORE_DIR)/, $(addsuffix /module.mk,$(MODULES)))

# Depdir information
DEPDIRS = $(addsuffix $(DEPDIR),$(MODULE_DIRS))

$(TARGET): $(OBJS)
ifeq ($(STATIC_LINKING), 1)
	$(AR) $@ $(wildcard *.o) $(wildcard */*.o) $(wildcard */*/*.o) $(wildcard */*/*/*.o) $(wildcard */*/*/*/*.o)  $(wildcard */*/*/*/*/*.o)
else
	$(CXX) $(LDFLAGS) $+ $(LIBS) -o $@
endif

# Dumb compile rule, for C++ compilers that don't allow dependency tracking or
# where it is broken (such as GCC 2.95).
.cpp.o:
	$(MKDIR) $(*D)
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c $(<) -o $*.o

clean:
	$(RM_REC) $(DEPDIRS)
	$(RM) $(OBJS) $(TARGET)

# Include the dependency tracking files.
-include $(wildcard $(addsuffix /*.d,$(DEPDIRS)))

# Mark *.d files and most *.mk files as PHONY. This stops make from trying to
# recreate them (which it can't), and in particular from looking for potential
# source files. This can save quite a bit of disk access time.
.PHONY: $(wildcard $(addsuffix /*.d,$(DEPDIRS))) $(addprefix $(CORE_DIR)/, $(addsuffix /module.mk,$(MODULES))) \
	$(CORE_DIR)/$(port_mk) $(CORE_DIR)/rules.mk $(CORE_DIR)/engines/engines.mk

.PHONY: all clean
